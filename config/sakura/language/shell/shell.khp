sh -n /// -n 構文エラーチェック\n-v コマンド分の内容表示\n-x コマンド実行後に実行結果を表示
date /// 日付を出力\n+[FMT]で出力方法を指定する\n ex.)+%y%m%d%H%M
expr /// 四則演算を行う。\n ex.) expr 1 + 2 - 3 \* 4 / 5 % 6`
if /// 条件式を評価する。\nif [ ... ]; then\nelif [ ... ]; then\nelse\nfi
for /// 繰り返し処理を行う。\nfor i in a b c d\ndo\n    echo $i\ndone
while /// 繰り返し処理を行う。\nwhile [ ... ]\ndo\ndone
case /// 条件式を評価する。\ncase $x in\n    val) ...;;\nesac
$? ///  最後に実行したコマンドのexit値
$$ /// シェル自身のプロセスID
$! /// シェルが最後に起動したバックグラウンドプロセスのプロセスID
$- /// シェルの起動時のフラグ、setコマンドを使って設定したフラグの一覧
$n /// スクリプトに渡された n番目の引数 (9個まで引数を取れる。$0はスクリプトの名前、 $1は第1引数、…、$9は第9引数)
$# /// シェルに対する引数の個数(引数がない場合は0)
$* /// 全引数リスト。ダブルクォートで囲んだ場合、"$1 $2 … $n" と全引数を一つにくっつけた物に展開される。
$@ /// 全引数リスト。ダブルクォートで囲んだ場合、"$1" "$2" … "$n" とそれぞれの引数を個別にダブルクォートで囲んで展開する。
test /// 条件式を評価する。\n◆演算\n== 			両辺の文字列が一致したとき真\n!= 			両辺の文字列が一致しないとき真\n-n 変数 	変数がnullでないときに真\n-z 変数 	変数がnullのときに真\n\n◆ファイル属性演算子\n-d file 	fileが存在してディレクトリのとき真\n-e file 	fileが存在するとき真\n-f file 	ファイルが存在し普通のファイルのとき真\n\n◆論理演算子\n-a 	かつ\n-o 	または\n\n◆数値評価演算子\n-lt 	より小さい\n-le 	以上\n-eq 	等しい\n-ge 	以上\n-gt 	より大きい\n-ne 	等しくない
basename /// ファイル名のみ取得\n ex.)/Users/test/tests/test1.txt\ntest1.txt
dirname /// ディレクトリ名のみ取得\n ex.)/Users/test/tests/test1.txt\n/Users/test/tests
